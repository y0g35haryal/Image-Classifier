# -*- coding: utf-8 -*-
"""prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qOAaFAJE43zcliTIcC8m4A-AHrRh9wjV
"""

# Step 1: Import necessary libraries
from tensorflow.keras.models import load_model
import numpy as np
from PIL import Image
import requests
from io import BytesIO

# Step 2: Mount Google Drive (if you want to use any data from it)
# from google.colab import drive
# drive.mount('/content/drive')

# Step 3: Download the model from the given GitHub permalink
!wget 'https://github.com/y0g35haryal/Image-Classifier/blob/a771ce65113a1a50398611bf0e1bbd6020ef7a3b/imageclassification.keras?raw=true' -O /content/imageclassification.keras

# Step 4: Load the model
model = load_model('/content/imageclassification.keras')

# Step 4: Prepare a local image for prediction
image_path = '/content/test/rubyseedlessgrapes.jpg'  # Path to your local image file
image = Image.open(image_path)
image = image.resize((224, 224))  # Resize to match model's input size
image = np.array(image)
image = np.expand_dims(image, axis=0)  # Add batch dimension

# Step 5: Make predictions
predictions = model.predict(image)

# Step 6: Class labels
class_labels = [
    'apple', 'banana', 'cherry', 'grape', 'guava',
    'kiwi', 'lemon', 'mango', 'papaya', 'strawberry'
]

# Step 7: Show top 3 predictions with percentages
top_n = 3
top_indices = predictions[0].argsort()[-top_n:][::-1]

print("\nüîç Top Predictions:")
for i in top_indices:
    label = class_labels[i]
    confidence = predictions[0][i] * 100  # Convert to percentage
    print(f"{label}: {confidence:.2f}%")

# Step 8: Show the top prediction alone (like your original format)
predicted_class_index = top_indices[0]
predicted_class_name = class_labels[predicted_class_index]
predicted_probability = predictions[0][predicted_class_index] * 100  # Convert to %

print(f"\n‚úÖ Final Prediction: {predicted_class_name} ({predicted_probability:.2f}%)")



